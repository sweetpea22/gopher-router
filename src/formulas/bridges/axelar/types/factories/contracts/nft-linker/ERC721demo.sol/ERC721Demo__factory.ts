/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC721Demo,
  ERC721DemoInterface,
} from "../../../../contracts/nft-linker/ERC721demo.sol/ERC721Demo";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "assetHash",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "mintWithMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d7238038062001d728339810160408190526200003491620001e1565b8151829082906200004d9060009060208501906200006e565b508051620000639060019060208401906200006e565b505050505062000288565b8280546200007c906200024b565b90600052602060002090601f016020900481019282620000a05760008555620000eb565b82601f10620000bb57805160ff1916838001178555620000eb565b82800160010185558215620000eb579182015b82811115620000eb578251825591602001919060010190620000ce565b50620000f9929150620000fd565b5090565b5b80821115620000f95760008155600101620000fe565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013c57600080fd5b81516001600160401b038082111562000159576200015962000114565b604051601f8301601f19908116603f0116810190828211818310171562000184576200018462000114565b81604052838152602092508683858801011115620001a157600080fd5b600091505b83821015620001c55785820183015181830184015290820190620001a6565b83821115620001d75760008385830101525b9695505050505050565b60008060408385031215620001f557600080fd5b82516001600160401b03808211156200020d57600080fd5b6200021b868387016200012a565b935060208501519150808211156200023257600080fd5b5062000241858286016200012a565b9150509250929050565b600181811c908216806200026057607f821691505b602082108114156200028257634e487b7160e01b600052602260045260246000fd5b50919050565b611ada80620002986000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a22cb46511610066578063a22cb465146101ff578063b88d4fde14610212578063c87b56dd14610225578063e985e9c51461023857600080fd5b806370a08231146101b057806380b6d94b146101d157806395d89b41146101e4578063a0712d68146101ec57600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806323b872dd1461017757806342842e0e1461018a5780636352211e1461019d57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d61010836600461163e565b610274565b60405190151581526020015b60405180910390f35b61012a610311565b60405161011991906116b3565b61014a6101453660046116c6565b6103a3565b6040516001600160a01b039091168152602001610119565b6101756101703660046116fb565b6103ca565b005b610175610185366004611725565b610501565b610175610198366004611725565b610578565b61014a6101ab3660046116c6565b610593565b6101c36101be366004611761565b6105f8565b604051908152602001610119565b6101756101df366004611828565b610692565b61012a6107d0565b6101756101fa3660046116c6565b6107df565b61017561020d366004611895565b61086d565b6101756102203660046118d1565b61087c565b61012a6102333660046116c6565b6108fa565b61010d61024636600461194d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806102d757506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061030b57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606000805461032090611980565b80601f016020809104026020016040519081016040528092919081815260200182805461034c90611980565b80156103995780601f1061036e57610100808354040283529160200191610399565b820191906000526020600020905b81548152906001019060200180831161037c57829003601f168201915b5050505050905090565b60006103ae82610a0b565b506000908152600460205260409020546001600160a01b031690565b60006103d582610593565b9050806001600160a01b0316836001600160a01b031614156104645760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b038216148061048057506104808133610246565b6104f25760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161045b565b6104fc8383610a6f565b505050565b61050b3382610aea565b61056d5760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161045b565b6104fc838383610b68565b6104fc8383836040518060200160405280600081525061087c565b6000818152600260205260408120546001600160a01b03168061030b5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161045b565b60006001600160a01b0382166106765760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161045b565b506001600160a01b031660009081526003602052604090205490565b60008381526008602052604090205460ff16600114156106f45760405162461bcd60e51b815260206004820152601760248201527f746f6b656e20494420616c726561647920657869737473000000000000000000604482015260640161045b565b60008381526008602052604090819020805460ff191660011790555160079061071e9084906119bb565b9081526040519081900360200190205460ff16600114156107815760405162461bcd60e51b815260206004820152601360248201527f6861736820616c72656164792065786973747300000000000000000000000000604482015260640161045b565b600160078360405161079391906119bb565b908152604051908190036020019020805460ff9290921660ff199092169190911790556107c66107c03390565b84610d7b565b6104fc8382610d95565b60606001805461032090611980565b60008181526008602052604090205460ff16600114156108415760405162461bcd60e51b815260206004820152601760248201527f746f6b656e20494420616c726561647920657869737473000000000000000000604482015260640161045b565b6000818152600860205260409020805460ff1916600117905561086a6108643390565b82610d7b565b50565b610878338383610e3e565b5050565b6108863383610aea565b6108e85760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b606482015260840161045b565b6108f484848484610f0d565b50505050565b606061090582610a0b565b6000828152600660205260408120805461091e90611980565b80601f016020809104026020016040519081016040528092919081815260200182805461094a90611980565b80156109975780601f1061096c57610100808354040283529160200191610997565b820191906000526020600020905b81548152906001019060200180831161097a57829003601f168201915b5050505050905060006109b560408051602081019091526000815290565b90508051600014156109c8575092915050565b8151156109fa5780826040516020016109e29291906119d7565b60405160208183030381529060405292505050919050565b610a0384610f8b565b949350505050565b6000818152600260205260409020546001600160a01b031661086a5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161045b565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0384169081179091558190610ab182610593565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610af683610593565b9050806001600160a01b0316846001600160a01b03161480610b3d57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610a035750836001600160a01b0316610b56846103a3565b6001600160a01b031614949350505050565b826001600160a01b0316610b7b82610593565b6001600160a01b031614610bdf5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161045b565b6001600160a01b038216610c5a5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161045b565b610c678383836001610fff565b826001600160a01b0316610c7a82610593565b6001600160a01b031614610cde5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161045b565b6000818152600460209081526040808320805473ffffffffffffffffffffffffffffffffffffffff199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610878828260405180602001604052806000815250611087565b6000828152600260205260409020546001600160a01b0316610e1f5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e000000000000000000000000000000000000606482015260840161045b565b600082815260066020908152604090912082516104fc9284019061158f565b816001600160a01b0316836001600160a01b03161415610ea05760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161045b565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610f18848484610b68565b610f2484848484611105565b6108f45760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161045b565b6060610f9682610a0b565b6000610fad60408051602081019091526000815290565b90506000815111610fcd5760405180602001604052806000815250610ff8565b80610fd78461125d565b604051602001610fe89291906119d7565b6040516020818303038152906040525b9392505050565b60018111156108f4576001600160a01b03841615611045576001600160a01b0384166000908152600360205260408120805483929061103f908490611a1c565b90915550505b6001600160a01b038316156108f4576001600160a01b0383166000908152600360205260408120805483929061107c908490611a33565b909155505050505050565b6110918383611307565b61109e6000848484611105565b6104fc5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161045b565b60006001600160a01b0384163b1561125257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611149903390899088908890600401611a4b565b602060405180830381600087803b15801561116357600080fd5b505af1925050508015611193575060408051601f3d908101601f1916820190925261119091810190611a87565b60015b611238573d8080156111c1576040519150601f19603f3d011682016040523d82523d6000602084013e6111c6565b606091505b5080516112305760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161045b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a03565b506001949350505050565b6060600061126a836114ad565b600101905060008167ffffffffffffffff81111561128a5761128a61177c565b6040519080825280601f01601f1916602001820160405280156112b4576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85049450846112fa576112ff565b6112be565b509392505050565b6001600160a01b03821661135d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161045b565b6000818152600260205260409020546001600160a01b0316156113c25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161045b565b6113d0600083836001610fff565b6000818152600260205260409020546001600160a01b0316156114355760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161045b565b6001600160a01b0382166000818152600360209081526040808320805460010190558483526002909152808220805473ffffffffffffffffffffffffffffffffffffffff19168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106114f6577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310611522576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061154057662386f26fc10000830492506010015b6305f5e1008310611558576305f5e100830492506008015b612710831061156c57612710830492506004015b6064831061157e576064830492506002015b600a831061030b5760010192915050565b82805461159b90611980565b90600052602060002090601f0160209004810192826115bd5760008555611603565b82601f106115d657805160ff1916838001178555611603565b82800160010185558215611603579182015b828111156116035782518255916020019190600101906115e8565b5061160f929150611613565b5090565b5b8082111561160f5760008155600101611614565b6001600160e01b03198116811461086a57600080fd5b60006020828403121561165057600080fd5b8135610ff881611628565b60005b8381101561167657818101518382015260200161165e565b838111156108f45750506000910152565b6000815180845261169f81602086016020860161165b565b601f01601f19169290920160200192915050565b602081526000610ff86020830184611687565b6000602082840312156116d857600080fd5b5035919050565b80356001600160a01b03811681146116f657600080fd5b919050565b6000806040838503121561170e57600080fd5b611717836116df565b946020939093013593505050565b60008060006060848603121561173a57600080fd5b611743846116df565b9250611751602085016116df565b9150604084013590509250925092565b60006020828403121561177357600080fd5b610ff8826116df565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156117ad576117ad61177c565b604051601f8501601f19908116603f011681019082821181831017156117d5576117d561177c565b816040528093508581528686860111156117ee57600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261181957600080fd5b610ff883833560208501611792565b60008060006060848603121561183d57600080fd5b83359250602084013567ffffffffffffffff8082111561185c57600080fd5b61186887838801611808565b9350604086013591508082111561187e57600080fd5b5061188b86828701611808565b9150509250925092565b600080604083850312156118a857600080fd5b6118b1836116df565b9150602083013580151581146118c657600080fd5b809150509250929050565b600080600080608085870312156118e757600080fd5b6118f0856116df565b93506118fe602086016116df565b925060408501359150606085013567ffffffffffffffff81111561192157600080fd5b8501601f8101871361193257600080fd5b61194187823560208401611792565b91505092959194509250565b6000806040838503121561196057600080fd5b611969836116df565b9150611977602084016116df565b90509250929050565b600181811c9082168061199457607f821691505b602082108114156119b557634e487b7160e01b600052602260045260246000fd5b50919050565b600082516119cd81846020870161165b565b9190910192915050565b600083516119e981846020880161165b565b8351908301906119fd81836020880161165b565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015611a2e57611a2e611a06565b500390565b60008219821115611a4657611a46611a06565b500190565b60006001600160a01b03808716835280861660208401525083604083015260806060830152611a7d6080830184611687565b9695505050505050565b600060208284031215611a9957600080fd5b8151610ff88161162856fea26469706673582212203ccbd05599e4d394724609fe79db2208bd72a0867a36e8ba9ef34e5aa8237e1964736f6c63430008090033";

type ERC721DemoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721DemoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Demo__factory extends ContractFactory {
  constructor(...args: ERC721DemoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Demo> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721Demo>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721Demo {
    return super.attach(address) as ERC721Demo;
  }
  override connect(signer: Signer): ERC721Demo__factory {
    return super.connect(signer) as ERC721Demo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721DemoInterface {
    return new utils.Interface(_abi) as ERC721DemoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Demo {
    return new Contract(address, _abi, signerOrProvider) as ERC721Demo;
  }
}
